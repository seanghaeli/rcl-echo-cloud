AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    "Sets up a continuous process that monitors an SQS queue and performs inference on view-classifier model on any .mat data loaded to S3 bucket, and uploads output to the same bucket. \n"

Parameters:
  gitHubBranch:
    Type: String
    Default: master

Globals:
  Function:
    AutoPublishAlias: live
    Handler: index.handler
    MemorySize: 512
    Runtime: python3.7
    Timeout: 60
    Tracing: Active

Resources:
  PyDicomLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        Description: PyDicom
        ContentUri: ../layers/pydicom.zip
        CompatibleRuntimes:
          - python3.8
          - python3.7
        RetentionPolicy: Delete

  Model:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./model/
      Layers:
      - !Ref PyDicomLayer
      Policies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - SQSSendMessagePolicy:
            QueueName: 
              !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/sqsname:1}}'
        - S3CrudPolicy:
            BucketName:
              !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/s3Bucket:1}}'
      VpcConfig: 
        SecurityGroupIds:
          - '{{resolve:ssm:/rcl-echo-cloud/securitygroup:1}}'
        SubnetIds:
          - '{{resolve:ssm:/rcl-echo-cloud/lambdasubnet1:1}}'
          - '{{resolve:ssm:/rcl-echo-cloud/lambdasubnet2:1}}'
      FileSystemConfigs:
        - Arn: !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/efslambdaarn:1}}' 
          LocalMountPath: /mnt/tmp
      Environment:
        Variables:
          sqsEndpoint:
            !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/sqsvpce:1}}'
          Bucket:
            !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/s3Bucket:1}}'
          queueName: 
            !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/sqsname:1}}'

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: 
        !GetAtt Model.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: 
         !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Sub '{{resolve:ssm:/rcl-echo-cloud/${gitHubBranch}/s3Bucket:1}}'

  lambdaParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: 
        !Sub /rcl-echo-cloud/${gitHubBranch}/lambdaArn
      Type: String
      Value: 
        !GetAtt Model.Arn
      Description: !Sub LambdaArn for rcl-echo-cloud ${gitHubBranch}

Outputs:
  ModelArn:
      Value: !GetAtt Model.Arn